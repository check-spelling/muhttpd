#! /bin/sh

# Version
version=1.1.3

[ ! -e config.log ] || rm config.log

# Defaults
background=yes
cgi=yes
handlers=yes
logging=yes
mime=yes
pidfile=yes
setuid=yes
ssl=auto
prefix='/usr/local'
packagedirsfx='/share/$(PACKAGE)-$(VERSION)'
sbindir='$(PREFIX)/sbin'
sysconfdir='/etc'
mandir='$(PREFIX)/man'
logdir='/var/log'
need_clearenv=yes
need_strndup=yes

# Some useful variables
[ -n "$TMPDIR" ] || TMPDIR=/tmp
[ -n "$CC" ] || CC=cc

# Command line options override defaults
while [ ! "$1." = '.' ]
do
	case "$1" in
	--disable-background)
		background=no
	;;
	--enable-background)
		background=yes
	;;
	--disable-cgi)
		cgi=no
	;;
	--enable-cgi)
		cgi=yes
	;;
	--disable-handlers)
		handlers=no
	;;
	--enable-handlers)
		handlers=yes
		mime=yes
	;;
	--disable-logging)
		logging=no
	;;
	--enable-logging)
		logging=yes
	;;
	--disable-mime)
		mime=no
		handlers=no
	;;
	--enable-mime)
		mime=yes
	;;
	--disable-pidfile)
		pidfile=no
	;;
	--enable-pidfile)
		pidfile=yes
	;;
	--disable-setuid)
		setuid=no
	;;
	--enable-setuid)
		setuid=yes
	;;
	--disable-ssl)
		ssl=no
	;;
	--enable-ssl)
		ssl=yes
	;;
	--disable-everything)
		background=no
		cgi=no
		handlers=no
		logging=no
		mime=no
		pidfile=no
		setuid=no
		ssl=no
	;;
	--enable-everything)
		background=yes
		cgi=yes
		handlers=yes
		logging=yes
		mime=yes
		pidfile=yes
		setuid=yes
		ssl=yes
	;;
	--with-clearenv)
		need_clearenv=yes
	;;
	--without-clearenv)
		need_clearenv=no
	;;
	--with-strndup)
		need_strndup=yes
	;;
	--without-strndup)
		need_strndup=no
	;;
	--mandir)
		shift
		mandir="$1"
	;;
	--prefix)
		shift
		prefix="$1"
	;;
	--packagedir)
		shift
		packagedir="$1"
	;;
	--sbindir)
		shift
		sbindir="$1"
	;;
	--sysconfdir)
		shift
		sysconfdir="$1"
	;;
	--logdir)
		shift
		logdir="$1"
	;;
	--help)
		echo "See the file INSTALL for options"
		exit
	;;
	*)
		echo 'Unknown option: ' $1
		exit 128
	;;
	esac
	shift
done 

# Detect settings that were set to "auto"

# Detect SSL support

if [ "$ssl" = "auto" ]
then
	printf "Detecting SSL support..."

	# Try OpenSSL
	ssl_libs="-lssl -lcrypto"

	# Write test program

	prog="$TMPDIR/ssl_test.c"
	cat > "$prog" <<EOT
#include <openssl/ssl.h>

int main(int argc, char **argv) {
	SSL_library_init();
	return 0;
}
EOT
	# Try compiling program
	echo "Compiling OpenSSL test program" >> config.log
	$CC $CFLAGS "$prog" $LIBS $ssl_libs 2>> config.log
	success=$?
	echo "Done compiling OpenSSL test program" >> config.log

	if [ $success -eq 0 ]
	then
		ssl=yes
		echo "OpenSSL"
	else
		ssl=no
		echo "not found"
		echo " * You may want to install OpenSSL to enable SSL support."
		echo
	fi

	# Clean up
	rm "$prog" a.out 2> /dev/null
fi

# Print summary
echo "Features:"
echo "Backgrounding:	$background"
echo "CGI Support:	$cgi"
echo "Logging:	$logging"
echo "MIME Types:	$mime"
echo "Handlers:	$handlers"
echo "Pidfile:	$pidfile"
echo "Set uid/gid:	$setuid"
echo "SSL support:	$ssl"

# Select objects to be compiled in
objects='main.o globals.o init.o socket.o request.o status.o config.o serve.o'

[ $need_strndup = 'yes' ] && objects="$objects strndup.o"
[ $need_clearenv = 'yes' ] && objects="$objects clearenv.o"
[ $cgi = 'yes' -o $handlers = 'yes' ] && objects="$objects handler.o"
[ $logging = 'yes' ] && objects="$objects log.o"
[ $mime = 'yes' ] && objects="$objects type.o"
if [ $ssl = 'yes' ]
then
	objects="$objects ssl.o"
	LIBS="$LIBS $ssl_libs"
fi

## Generate Makefile.cfg

cat > Makefile.cfg <<EOT
CFLAGS ?= $CFLAGS
LIBS += $LIBS

VERSION = $version

PREFIX ?= \$(DESTDIR)$prefix
PACKAGEDIR ?= \$(PREFIX)$packagedirsfx
TRUEPREFIX ?= $prefix
TRUEPACKAGEDIR ?= \$(TRUEPREFIX)$packagedirsfx
SBINDIR ?= $sbindir
SYSCONFDIR ?= \$(DESTDIR)$sysconfdir
MANDIR ?= $mandir
LOGDIR ?= \$(DESTDIR)$logdir

OBJECTS = $objects
EOT

## Generate flags.h
cat > flags.h <<EOT
/* Compile time options */
EOT
[ $background = 'yes' ] && echo "#define ENABLE_BACKGROUND" >> flags.h
[ $cgi = 'yes' ] && echo "#define ENABLE_CGI" >> flags.h
[ $handlers = 'yes' ] && echo "#define ENABLE_HANDLERS" >> flags.h
[ $logging = 'yes' ] && echo "#define ENABLE_LOGGING" >> flags.h
[ $mime = 'no' ] && echo "#define DISABLE_MIME" >> flags.h
[ $pidfile = 'yes' ] && echo "#define ENABLE_PIDFILE" >> flags.h
[ $setuid = 'no' ] && echo "#define DISABLE_SETUID" >> flags.h
[ $ssl = 'yes' ] && echo "#define ENABLE_SSL" >> flags.h
echo "#define VERSION $version" >> flags.h
echo "#define SERVER_SOFTWARE \"muhttpd/$version\"" >> flags.h
echo "#define CONFIGFILE \"${sysconfdir}/muhttpd/muhttpd.conf\"" >> flags.h

echo
echo 'Run make to build muhttpd'
